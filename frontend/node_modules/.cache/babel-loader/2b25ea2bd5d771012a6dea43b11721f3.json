{"ast":null,"code":"export class Api {\n  constructor(token) {\n    this._token = token;\n    this._headers = {\n      'Content-Type': 'application/json',\n      authorization: this._token\n    };\n  }\n\n  getUserData() {\n    return fetch('https://nomoreparties.co/v1/cohort-43/users/me', {\n      headers: this._headers,\n      method: 'GET'\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject('Возникла ошибка');\n    });\n  }\n\n  updateUserData(user) {\n    const body = {\n      name: user.name,\n      about: user.about\n    };\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-43/users/me', {\n      headers: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(body)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject('Возникла ошибка');\n    });\n  }\n\n  getCardsData() {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-43/cards', {\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject('Возникла ошибка');\n    });\n  }\n\n  addCard(card) {\n    const body = {\n      name: card.name,\n      link: card.link\n    };\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-43/cards', {\n      headers: this._headers,\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject('Возникла ошибка');\n    });\n  }\n\n  deleteCard(cardId) {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-43/cards/' + cardId, {\n      headers: this._headers,\n      method: 'DELETE'\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject('Возникла ошибка');\n    });\n  }\n\n  updateLike(cardId, method) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-43/cards/${cardId}/likes`, {\n      headers: this._headers,\n      method\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject('Возникла ошибка');\n    });\n  }\n\n  updateAvatar(user) {\n    const body = {\n      avatar: user.avatar\n    };\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-43/users/me/avatar', {\n      headers: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(body)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject('Возникла ошибка');\n    });\n  }\n\n}\nexport const api = new Api('8e904e2d-1e9e-4822-a1dc-ac070e02dd13');","map":{"version":3,"names":["Api","constructor","token","_token","_headers","authorization","getUserData","fetch","headers","method","then","res","ok","json","Promise","reject","updateUserData","user","body","name","about","JSON","stringify","getCardsData","addCard","card","link","deleteCard","cardId","updateLike","updateAvatar","avatar","api"],"sources":["/Users/anastasiavolzina/Desktop/dev/mesto-react/mesto/src/utils/api.js"],"sourcesContent":["export class Api{\n    constructor(token){\n        this._token = token;\n        this._headers = {\n            'Content-Type': 'application/json',\n            authorization: this._token\n        }\n    }\n    getUserData(){\n        return fetch('https://nomoreparties.co/v1/cohort-43/users/me',{\n            headers: this._headers,\n            method: 'GET'\n        })\n        .then((res) =>{\n           if(res.ok){\n                return res.json()\n           }\n           return Promise.reject('Возникла ошибка') \n        }) \n      \n    }\n\n    updateUserData(user){\n        const body = {\n            name: user.name,\n            about: user.about\n        };\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-43/users/me',{\n            headers: this._headers,\n            method: 'PATCH',\n            body: JSON.stringify(body),\n        })\n        .then((res) =>{\n            if(res.ok){\n                 return res.json()\n            }\n            return Promise.reject('Возникла ошибка') \n         }) \n    }\n\n    getCardsData(){\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-43/cards',{\n            headers: this._headers,\n        })\n        .then((res) =>{\n           if(res.ok){\n                return res.json()\n           }\n           return Promise.reject('Возникла ошибка') \n        }) \n      \n    }\n\n    addCard(card){\n        const body = {\n            name: card.name,\n            link: card.link\n        };\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-43/cards',{\n            headers: this._headers,\n            method: 'POST',\n            body: JSON.stringify(body),\n        })\n        .then((res) =>{\n            if(res.ok){\n                 return res.json()\n            }\n            return Promise.reject('Возникла ошибка') \n         }) \n    }\n\n    deleteCard(cardId){\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-43/cards/'+ cardId,{\n            headers: this._headers,\n            method: 'DELETE'\n        })\n        .then((res) =>{\n           if(res.ok){\n                return res.json()\n           }\n           return Promise.reject('Возникла ошибка') \n        }) \n    }\n\n    updateLike(cardId, method){\n        return fetch(`https://mesto.nomoreparties.co/v1/cohort-43/cards/${cardId}/likes`,{\n            headers: this._headers,\n            method,\n        })\n        .then((res) =>{\n            if(res.ok){\n                 return res.json()\n            }\n            return Promise.reject('Возникла ошибка') \n         }) \n    }\n\n    updateAvatar(user){\n        const body = {\n            avatar: user.avatar\n        };\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-43/users/me/avatar' ,{\n            headers: this._headers,\n            method: 'PATCH',\n            body: JSON.stringify(body),\n        })\n        .then((res) =>{\n            if(res.ok){\n                 return res.json()\n            }\n            return Promise.reject('Возникла ошибка') \n         }) \n    }\n\n\n}\n\nexport const api = new Api('8e904e2d-1e9e-4822-a1dc-ac070e02dd13');"],"mappings":"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"},"metadata":{},"sourceType":"module"}