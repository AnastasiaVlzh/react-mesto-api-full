{"ast":null,"code":"//export const BASE_URL = 'http://localhost:4000';\nexport class Api {\n  constructor(url, authorization) {\n    this._URL = url;\n    this._authorization = authorization; // this._token = token;\n    // this._headers = {\n    //     'Content-Type': 'application/json',\n    //     //authorization: this._token\n    // }\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getUserData() {\n    return fetch(`${BASE_URL}/users/me`, {\n      headers: this._headers,\n      method: 'GET'\n    }).then(this._checkResponse);\n  }\n\n  updateUserData(user) {\n    const body = {\n      name: user.name,\n      about: user.about\n    };\n    return fetch(`${BASE_URL}/users/me`, {\n      headers: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(body)\n    }).then(this._checkResponse);\n  }\n\n  getCardsData() {\n    return fetch(`${BASE_URL}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  addCard(card) {\n    const body = {\n      name: card.name,\n      link: card.link\n    };\n    return fetch(`${BASE_URL}/cards`, {\n      headers: this._headers,\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${BASE_URL}cards/` + cardId, {\n      headers: this._headers,\n      method: 'DELETE'\n    }).then(this._checkResponse);\n  }\n\n  updateLike(cardId, method) {\n    return fetch(`${BASE_URL}/cards/${cardId}/likes`, {\n      headers: this._headers,\n      method\n    }).then(this._checkResponse);\n  }\n\n  updateAvatar(user) {\n    const body = {\n      avatar: user.avatar\n    };\n    return fetch(`${BASE_URL}/users/me/avatar`, {\n      headers: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(body)\n    }).then(this._checkResponse);\n  }\n\n}\nexport const api = new Api('http://localhost:4000');","map":{"version":3,"names":["Api","constructor","url","authorization","_URL","_authorization","_checkResponse","res","ok","json","Promise","reject","status","getUserData","fetch","BASE_URL","headers","_headers","method","then","updateUserData","user","body","name","about","JSON","stringify","getCardsData","addCard","card","link","deleteCard","cardId","updateLike","updateAvatar","avatar","api"],"sources":["/Users/anastasiavolzina/Desktop/dev/react-mesto-api-full/frontend/src/utils/api.js"],"sourcesContent":["//export const BASE_URL = 'http://localhost:4000';\nexport class Api{\n    constructor(url, authorization){\n        this._URL = url;\n        this._authorization = authorization\n        // this._token = token;\n        // this._headers = {\n        //     'Content-Type': 'application/json',\n        //     //authorization: this._token\n        // }\n    }\n\n    _checkResponse(res){\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка ${res.status}`);\n        }\n\n    getUserData(){\n        return fetch(`${BASE_URL}/users/me`,{\n            headers: this._headers,\n            method: 'GET'\n        })\n        .then(this._checkResponse) \n    }\n\n\n\n    updateUserData(user){\n        const body = {\n            name: user.name,\n            about: user.about\n        };\n        return fetch(`${BASE_URL}/users/me`,{\n            headers: this._headers,\n            method: 'PATCH',\n            body: JSON.stringify(body),\n        })\n        .then(this._checkResponse) \n    }\n\n    getCardsData(){\n        return fetch(`${BASE_URL}/cards`,{\n            headers: this._headers,\n        })\n        .then(this._checkResponse) \n      \n    }\n\n    addCard(card){\n        const body = {\n            name: card.name,\n            link: card.link\n        };\n        return fetch(`${BASE_URL}/cards`,{\n            headers: this._headers,\n            method: 'POST',\n            body: JSON.stringify(body),\n        })\n        .then(this._checkResponse) \n    }\n\n    deleteCard(cardId){\n        return fetch(`${BASE_URL}cards/`+ cardId,{\n            headers: this._headers,\n            method: 'DELETE'\n        })\n        .then(this._checkResponse) \n    }\n\n    updateLike(cardId, method){\n        return fetch(`${BASE_URL}/cards/${cardId}/likes`,{\n            headers: this._headers,\n            method,\n        })\n        .then(this._checkResponse) \n    }\n\n    updateAvatar(user){\n        const body = {\n            avatar: user.avatar\n        };\n        return fetch(`${BASE_URL}/users/me/avatar` ,{\n            headers: this._headers,\n            method: 'PATCH',\n            body: JSON.stringify(body),\n        })\n        .then(this._checkResponse) \n    }\n\n\n}\n\nexport const api = new Api('http://localhost:4000');"],"mappings":"AAAA;AACA,OAAO,MAAMA,GAAN,CAAS;EACZC,WAAW,CAACC,GAAD,EAAMC,aAAN,EAAoB;IAC3B,KAAKC,IAAL,GAAYF,GAAZ;IACA,KAAKG,cAAL,GAAsBF,aAAtB,CAF2B,CAG3B;IACA;IACA;IACA;IACA;EACH;;EAEDG,cAAc,CAACC,GAAD,EAAK;IACX,IAAIA,GAAG,CAACC,EAAR,EAAY;MACR,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACH;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAAP;EACH;;EAELC,WAAW,GAAE;IACT,OAAOC,KAAK,CAAE,GAAEC,QAAS,WAAb,EAAwB;MAChCC,OAAO,EAAE,KAAKC,QADkB;MAEhCC,MAAM,EAAE;IAFwB,CAAxB,CAAL,CAINC,IAJM,CAID,KAAKb,cAJJ,CAAP;EAKH;;EAIDc,cAAc,CAACC,IAAD,EAAM;IAChB,MAAMC,IAAI,GAAG;MACTC,IAAI,EAAEF,IAAI,CAACE,IADF;MAETC,KAAK,EAAEH,IAAI,CAACG;IAFH,CAAb;IAIA,OAAOV,KAAK,CAAE,GAAEC,QAAS,WAAb,EAAwB;MAChCC,OAAO,EAAE,KAAKC,QADkB;MAEhCC,MAAM,EAAE,OAFwB;MAGhCI,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;IAH0B,CAAxB,CAAL,CAKNH,IALM,CAKD,KAAKb,cALJ,CAAP;EAMH;;EAEDqB,YAAY,GAAE;IACV,OAAOb,KAAK,CAAE,GAAEC,QAAS,QAAb,EAAqB;MAC7BC,OAAO,EAAE,KAAKC;IADe,CAArB,CAAL,CAGNE,IAHM,CAGD,KAAKb,cAHJ,CAAP;EAKH;;EAEDsB,OAAO,CAACC,IAAD,EAAM;IACT,MAAMP,IAAI,GAAG;MACTC,IAAI,EAAEM,IAAI,CAACN,IADF;MAETO,IAAI,EAAED,IAAI,CAACC;IAFF,CAAb;IAIA,OAAOhB,KAAK,CAAE,GAAEC,QAAS,QAAb,EAAqB;MAC7BC,OAAO,EAAE,KAAKC,QADe;MAE7BC,MAAM,EAAE,MAFqB;MAG7BI,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;IAHuB,CAArB,CAAL,CAKNH,IALM,CAKD,KAAKb,cALJ,CAAP;EAMH;;EAEDyB,UAAU,CAACC,MAAD,EAAQ;IACd,OAAOlB,KAAK,CAAE,GAAEC,QAAS,QAAZ,GAAqBiB,MAAtB,EAA6B;MACrChB,OAAO,EAAE,KAAKC,QADuB;MAErCC,MAAM,EAAE;IAF6B,CAA7B,CAAL,CAINC,IAJM,CAID,KAAKb,cAJJ,CAAP;EAKH;;EAED2B,UAAU,CAACD,MAAD,EAASd,MAAT,EAAgB;IACtB,OAAOJ,KAAK,CAAE,GAAEC,QAAS,UAASiB,MAAO,QAA7B,EAAqC;MAC7ChB,OAAO,EAAE,KAAKC,QAD+B;MAE7CC;IAF6C,CAArC,CAAL,CAINC,IAJM,CAID,KAAKb,cAJJ,CAAP;EAKH;;EAED4B,YAAY,CAACb,IAAD,EAAM;IACd,MAAMC,IAAI,GAAG;MACTa,MAAM,EAAEd,IAAI,CAACc;IADJ,CAAb;IAGA,OAAOrB,KAAK,CAAE,GAAEC,QAAS,kBAAb,EAAgC;MACxCC,OAAO,EAAE,KAAKC,QAD0B;MAExCC,MAAM,EAAE,OAFgC;MAGxCI,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;IAHkC,CAAhC,CAAL,CAKNH,IALM,CAKD,KAAKb,cALJ,CAAP;EAMH;;AAxFW;AA6FhB,OAAO,MAAM8B,GAAG,GAAG,IAAIpC,GAAJ,CAAQ,uBAAR,CAAZ"},"metadata":{},"sourceType":"module"}