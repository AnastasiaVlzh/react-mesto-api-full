{"ast":null,"code":"//export const BASE_URL = 'http://localhost:4000';\nexport class Api {\n  constructor(url, headers) {\n    this._URL = url; // this._token = token;\n\n    this._headers = {\n      'Content-Type': 'application/json',\n      authorization: this._authorization\n    };\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getUserData() {\n    return fetch(`${this._URL}/users/me`, {\n      headers: this._headers,\n      method: 'GET'\n    }).then(this._checkResponse);\n  }\n\n  updateUserData(user) {\n    const body = {\n      name: user.name,\n      about: user.about\n    };\n    return fetch(`${BASE_URL}/users/me`, {\n      headers: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(body)\n    }).then(this._checkResponse);\n  }\n\n  getCardsData() {\n    return fetch(`${BASE_URL}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  addCard(card) {\n    const body = {\n      name: card.name,\n      link: card.link\n    };\n    return fetch(`${BASE_URL}/cards`, {\n      headers: this._headers,\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${BASE_URL}cards/` + cardId, {\n      headers: this._headers,\n      method: 'DELETE'\n    }).then(this._checkResponse);\n  }\n\n  updateLike(cardId, method) {\n    return fetch(`${BASE_URL}/cards/${cardId}/likes`, {\n      headers: this._headers,\n      method\n    }).then(this._checkResponse);\n  }\n\n  updateAvatar(user) {\n    const body = {\n      avatar: user.avatar\n    };\n    return fetch(`${BASE_URL}/users/me/avatar`, {\n      headers: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(body)\n    }).then(this._checkResponse);\n  }\n\n}\nexport const api = new Api('http://localhost:4000');","map":{"version":3,"names":["Api","constructor","url","headers","_URL","_headers","authorization","_authorization","_checkResponse","res","ok","json","Promise","reject","status","getUserData","fetch","method","then","updateUserData","user","body","name","about","BASE_URL","JSON","stringify","getCardsData","addCard","card","link","deleteCard","cardId","updateLike","updateAvatar","avatar","api"],"sources":["/Users/anastasiavolzina/Desktop/dev/react-mesto-api-full/frontend/src/utils/api.js"],"sourcesContent":["//export const BASE_URL = 'http://localhost:4000';\nexport class Api{\n    constructor(url, headers){\n        this._URL = url;\n        // this._token = token;\n        this._headers = {\n            'Content-Type': 'application/json',\n            authorization: this._authorization\n        }\n    }\n\n    _checkResponse(res){\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка ${res.status}`);\n        }\n\n    getUserData(){\n        return fetch(`${this._URL}/users/me`,{\n            headers: this._headers,\n            method: 'GET'\n        })\n        .then(this._checkResponse) \n    }\n\n\n\n    updateUserData(user){\n        const body = {\n            name: user.name,\n            about: user.about\n        };\n        return fetch(`${BASE_URL}/users/me`,{\n            headers: this._headers,\n            method: 'PATCH',\n            body: JSON.stringify(body),\n        })\n        .then(this._checkResponse) \n    }\n\n    getCardsData(){\n        return fetch(`${BASE_URL}/cards`,{\n            headers: this._headers,\n        })\n        .then(this._checkResponse) \n      \n    }\n\n    addCard(card){\n        const body = {\n            name: card.name,\n            link: card.link\n        };\n        return fetch(`${BASE_URL}/cards`,{\n            headers: this._headers,\n            method: 'POST',\n            body: JSON.stringify(body),\n        })\n        .then(this._checkResponse) \n    }\n\n    deleteCard(cardId){\n        return fetch(`${BASE_URL}cards/`+ cardId,{\n            headers: this._headers,\n            method: 'DELETE'\n        })\n        .then(this._checkResponse) \n    }\n\n    updateLike(cardId, method){\n        return fetch(`${BASE_URL}/cards/${cardId}/likes`,{\n            headers: this._headers,\n            method,\n        })\n        .then(this._checkResponse) \n    }\n\n    updateAvatar(user){\n        const body = {\n            avatar: user.avatar\n        };\n        return fetch(`${BASE_URL}/users/me/avatar` ,{\n            headers: this._headers,\n            method: 'PATCH',\n            body: JSON.stringify(body),\n        })\n        .then(this._checkResponse) \n    }\n\n\n}\n\nexport const api = new Api('http://localhost:4000');"],"mappings":"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"},"metadata":{},"sourceType":"module"}