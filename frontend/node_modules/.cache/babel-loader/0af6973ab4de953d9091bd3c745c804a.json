{"ast":null,"code":"export class Api {\n  constructor(url) {\n    this._URL = url; // this._token = token;\n\n    this._headers = {\n      'Content-Type': 'application/json' //authorization: this._authorization,\n\n    };\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getUserData() {\n    return fetch(`${this._URL}/users/me`, {\n      headers: this._headers,\n      method: 'GET',\n      credentials: \"include\"\n    }).then(this._checkResponse);\n  }\n\n  updateUserData(user) {\n    const body = {\n      name: user.name,\n      about: user.about\n    };\n    return fetch(`${this._URL}/users/me`, {\n      headers: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(body)\n    }).then(this._checkResponse);\n  }\n\n  getCardsData() {\n    return fetch(`${this._URL}/cards`, {\n      headers: this._headers,\n      credentials: \"include\"\n    }).then(this._checkResponse);\n  }\n\n  addCard(card) {\n    const body = {\n      name: card.name,\n      link: card.link\n    };\n    return fetch(`${this._URL}/cards`, {\n      headers: this._headers,\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._URL}cards/` + cardId, {\n      headers: this._headers,\n      method: 'DELETE'\n    }).then(this._checkResponse);\n  }\n\n  updateLike(cardId, method) {\n    return fetch(`${this._URL}/cards/${cardId}/likes`, {\n      headers: this._headers,\n      method\n    }).then(this._checkResponse);\n  }\n\n  updateAvatar(user) {\n    const body = {\n      avatar: user.avatar\n    };\n    return fetch(`${this._URL}/users/me/avatar`, {\n      headers: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(body)\n    }).then(this._checkResponse);\n  }\n\n}\nexport const api = new Api('http://localhost:4000');","map":{"version":3,"names":["Api","constructor","url","_URL","_headers","_checkResponse","res","ok","json","Promise","reject","status","getUserData","fetch","headers","method","credentials","then","updateUserData","user","body","name","about","JSON","stringify","getCardsData","addCard","card","link","deleteCard","cardId","updateLike","updateAvatar","avatar","api"],"sources":["/Users/anastasiavolzina/Desktop/dev/react-mesto-api-full/frontend/src/utils/api.js"],"sourcesContent":["export class Api{\n    constructor(url){\n        this._URL = url;\n        // this._token = token;\n        this._headers = {\n            'Content-Type': 'application/json',\n            //authorization: this._authorization,\n\n        }\n    }\n\n    _checkResponse(res){\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка ${res.status}`);\n        }\n\n    getUserData(){\n        return fetch(`${this._URL}/users/me`,{\n            headers: this._headers,\n            method: 'GET',\n            credentials:\"include\",\n        })\n        .then(this._checkResponse) \n    }\n\n\n\n    updateUserData(user){\n        const body = {\n            name: user.name,\n            about: user.about\n        };\n        return fetch(`${this._URL}/users/me`,{\n            headers: this._headers,\n            method: 'PATCH',\n            body: JSON.stringify(body),\n        })\n        .then(this._checkResponse) \n    }\n\n    getCardsData(){\n        return fetch(`${this._URL}/cards`,{\n            headers: this._headers,\n            credentials:\"include\",\n        })\n        .then(this._checkResponse) \n      \n    }\n\n    addCard(card){\n        const body = {\n            name: card.name,\n            link: card.link\n        };\n        return fetch(`${this._URL}/cards`,{\n            headers: this._headers,\n            method: 'POST',\n            body: JSON.stringify(body),\n        })\n        .then(this._checkResponse) \n    }\n\n    deleteCard(cardId){\n        return fetch(`${this._URL}cards/`+ cardId,{\n            headers: this._headers,\n            method: 'DELETE'\n        })\n        .then(this._checkResponse) \n    }\n\n    updateLike(cardId, method){\n        return fetch(`${this._URL}/cards/${cardId}/likes`,{\n            headers: this._headers,\n            method,\n        })\n        .then(this._checkResponse) \n    }\n\n    updateAvatar(user){\n        const body = {\n            avatar: user.avatar\n        };\n        return fetch(`${this._URL}/users/me/avatar` ,{\n            headers: this._headers,\n            method: 'PATCH',\n            body: JSON.stringify(body),\n        })\n        .then(this._checkResponse) \n    }\n\n\n}\n\nexport const api = new Api('http://localhost:4000');"],"mappings":"AAAA,OAAO,MAAMA,GAAN,CAAS;EACZC,WAAW,CAACC,GAAD,EAAK;IACZ,KAAKC,IAAL,GAAYD,GAAZ,CADY,CAEZ;;IACA,KAAKE,QAAL,GAAgB;MACZ,gBAAgB,kBADJ,CAEZ;;IAFY,CAAhB;EAKH;;EAEDC,cAAc,CAACC,GAAD,EAAK;IACX,IAAIA,GAAG,CAACC,EAAR,EAAY;MACR,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACH;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAAP;EACH;;EAELC,WAAW,GAAE;IACT,OAAOC,KAAK,CAAE,GAAE,KAAKV,IAAK,WAAd,EAAyB;MACjCW,OAAO,EAAE,KAAKV,QADmB;MAEjCW,MAAM,EAAE,KAFyB;MAGjCC,WAAW,EAAC;IAHqB,CAAzB,CAAL,CAKNC,IALM,CAKD,KAAKZ,cALJ,CAAP;EAMH;;EAIDa,cAAc,CAACC,IAAD,EAAM;IAChB,MAAMC,IAAI,GAAG;MACTC,IAAI,EAAEF,IAAI,CAACE,IADF;MAETC,KAAK,EAAEH,IAAI,CAACG;IAFH,CAAb;IAIA,OAAOT,KAAK,CAAE,GAAE,KAAKV,IAAK,WAAd,EAAyB;MACjCW,OAAO,EAAE,KAAKV,QADmB;MAEjCW,MAAM,EAAE,OAFyB;MAGjCK,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;IAH2B,CAAzB,CAAL,CAKNH,IALM,CAKD,KAAKZ,cALJ,CAAP;EAMH;;EAEDoB,YAAY,GAAE;IACV,OAAOZ,KAAK,CAAE,GAAE,KAAKV,IAAK,QAAd,EAAsB;MAC9BW,OAAO,EAAE,KAAKV,QADgB;MAE9BY,WAAW,EAAC;IAFkB,CAAtB,CAAL,CAINC,IAJM,CAID,KAAKZ,cAJJ,CAAP;EAMH;;EAEDqB,OAAO,CAACC,IAAD,EAAM;IACT,MAAMP,IAAI,GAAG;MACTC,IAAI,EAAEM,IAAI,CAACN,IADF;MAETO,IAAI,EAAED,IAAI,CAACC;IAFF,CAAb;IAIA,OAAOf,KAAK,CAAE,GAAE,KAAKV,IAAK,QAAd,EAAsB;MAC9BW,OAAO,EAAE,KAAKV,QADgB;MAE9BW,MAAM,EAAE,MAFsB;MAG9BK,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;IAHwB,CAAtB,CAAL,CAKNH,IALM,CAKD,KAAKZ,cALJ,CAAP;EAMH;;EAEDwB,UAAU,CAACC,MAAD,EAAQ;IACd,OAAOjB,KAAK,CAAE,GAAE,KAAKV,IAAK,QAAb,GAAsB2B,MAAvB,EAA8B;MACtChB,OAAO,EAAE,KAAKV,QADwB;MAEtCW,MAAM,EAAE;IAF8B,CAA9B,CAAL,CAINE,IAJM,CAID,KAAKZ,cAJJ,CAAP;EAKH;;EAED0B,UAAU,CAACD,MAAD,EAASf,MAAT,EAAgB;IACtB,OAAOF,KAAK,CAAE,GAAE,KAAKV,IAAK,UAAS2B,MAAO,QAA9B,EAAsC;MAC9ChB,OAAO,EAAE,KAAKV,QADgC;MAE9CW;IAF8C,CAAtC,CAAL,CAINE,IAJM,CAID,KAAKZ,cAJJ,CAAP;EAKH;;EAED2B,YAAY,CAACb,IAAD,EAAM;IACd,MAAMC,IAAI,GAAG;MACTa,MAAM,EAAEd,IAAI,CAACc;IADJ,CAAb;IAGA,OAAOpB,KAAK,CAAE,GAAE,KAAKV,IAAK,kBAAd,EAAiC;MACzCW,OAAO,EAAE,KAAKV,QAD2B;MAEzCW,MAAM,EAAE,OAFiC;MAGzCK,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;IAHmC,CAAjC,CAAL,CAKNH,IALM,CAKD,KAAKZ,cALJ,CAAP;EAMH;;AA1FW;AA+FhB,OAAO,MAAM6B,GAAG,GAAG,IAAIlC,GAAJ,CAAQ,uBAAR,CAAZ"},"metadata":{},"sourceType":"module"}