{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = response => {\n  return response.ok ? response.json() : Promise.reject(new Error(`Ошибка ${response.status}: ${response.statusText}`));\n};\n\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n};\nexport const register = _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  return fetch(`${BASE_URL}/auth/signup`, {\n    headers,\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponse(res));\n};\nexport const authorize = _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n  return fetch(`${BASE_URL}/auth/signin`, {\n    headers,\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponse(res));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: { ...headers,\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => checkResponse(res));\n};","map":{"version":3,"names":["BASE_URL","checkResponse","response","ok","json","Promise","reject","Error","status","statusText","headers","register","email","password","fetch","method","body","JSON","stringify","then","res","authorize","getContent","token"],"sources":["/Users/anastasiavolzina/Desktop/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = (response) => {\n  return response.ok ? response.json() : Promise.reject(new Error(`Ошибка ${response.status}: ${response.statusText}`));\n};\n\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json',\n};\n\nexport const register = ({ email, password }) => {\n  return fetch(`${BASE_URL}/auth/signup`, {\n    headers,\n    method: 'POST',\n    body: JSON.stringify({ email, password }),\n  })\n    .then(res => checkResponse(res));\n};\n\nexport const authorize = ({ email, password }) => {\n  return fetch(`${BASE_URL}/auth/signin`, {\n    headers,\n    method: 'POST',\n    body: JSON.stringify({ email, password }),\n  })\n    .then(res => checkResponse(res));\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      ...headers,\n      'Authorization': `Bearer ${token}`,\n    },\n  })\n    .then(res => checkResponse(res));\n};"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AAEP,MAAMC,aAAa,GAAIC,QAAD,IAAc;EAClC,OAAOA,QAAQ,CAACC,EAAT,GAAcD,QAAQ,CAACE,IAAT,EAAd,GAAgCC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAW,UAASL,QAAQ,CAACM,MAAO,KAAIN,QAAQ,CAACO,UAAW,EAA5D,CAAf,CAAvC;AACD,CAFD;;AAIA,MAAMC,OAAO,GAAG;EACd,UAAU,kBADI;EAEd,gBAAgB;AAFF,CAAhB;AAKA,OAAO,MAAMC,QAAQ,GAAG,QAAyB;EAAA,IAAxB;IAAEC,KAAF;IAASC;EAAT,CAAwB;EAC/C,OAAOC,KAAK,CAAE,GAAEd,QAAS,cAAb,EAA4B;IACtCU,OADsC;IAEtCK,MAAM,EAAE,MAF8B;IAGtCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEN,KAAF;MAASC;IAAT,CAAf;EAHgC,CAA5B,CAAL,CAKJM,IALI,CAKCC,GAAG,IAAInB,aAAa,CAACmB,GAAD,CALrB,CAAP;AAMD,CAPM;AASP,OAAO,MAAMC,SAAS,GAAG,SAAyB;EAAA,IAAxB;IAAET,KAAF;IAASC;EAAT,CAAwB;EAChD,OAAOC,KAAK,CAAE,GAAEd,QAAS,cAAb,EAA4B;IACtCU,OADsC;IAEtCK,MAAM,EAAE,MAF8B;IAGtCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEN,KAAF;MAASC;IAAT,CAAf;EAHgC,CAA5B,CAAL,CAKJM,IALI,CAKCC,GAAG,IAAInB,aAAa,CAACmB,GAAD,CALrB,CAAP;AAMD,CAPM;AASP,OAAO,MAAME,UAAU,GAAIC,KAAD,IAAW;EACnC,OAAOT,KAAK,CAAE,GAAEd,QAAS,WAAb,EAAyB;IACnCe,MAAM,EAAE,KAD2B;IAEnCL,OAAO,EAAE,EACP,GAAGA,OADI;MAEP,iBAAkB,UAASa,KAAM;IAF1B;EAF0B,CAAzB,CAAL,CAOJJ,IAPI,CAOCC,GAAG,IAAInB,aAAa,CAACmB,GAAD,CAPrB,CAAP;AAQD,CATM"},"metadata":{},"sourceType":"module"}